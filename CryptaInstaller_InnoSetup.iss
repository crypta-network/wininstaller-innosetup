; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define AppName "Crypta"
#include "cryptad_version.iss"
#define AppPublisher "crypta.network"
#define AppURL "https://crypta.network/"
#define AppExeName "Crypta.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{FDB7C786-8205-4D04-A6B2-4159119EC892}}
AppName={#AppName}
AppVersion={#AppVersion}
AppPublisher={#AppPublisher}
AppPublisherURL={#AppURL}
AppSupportURL={#AppURL}
AppUpdatesURL={#AppURL}
DefaultDirName={localappdata}\{#AppName}
DefaultGroupName={#AppName}
OutputBaseFilename=CryptaInstaller
SetupIconFile=resources\CryptaInstaller_InnoSetup.ico
UninstallDisplayIcon={app}\CryptaInstaller_InnoSetup_Uninstall.ico
UninstallDisplayName={#AppName}
SolidCompression=yes
PrivilegesRequired=lowest
WizardImageFile=resources\Wizard_CryptaInstall.bmp
WizardSmallImageFile=resources\Wizard_CryptaInstall_Small.bmp
; Approx space for jlink bundle + app data (~300 MiB)
ExtraDiskSpaceRequired=314572800
Compression=lzma2/ultra
InternalCompressLevel=ultra
RestartIfNeededByRun=False
AllowUNCPath=False
AllowNoIcons=yes
UsePreviousAppDir=yes
CloseApplications=yes
CloseApplicationsFilter=awt.dll
;Prevent installer from being run multiple times in parallel
SetupMutex=SetupMutex{#SetupSetting("AppId")}

#ifndef Arch
  #define Arch "arm64"
#endif

#if Arch == "x64"
ArchitecturesAllowed=x64os
#elif Arch == "arm64"
ArchitecturesAllowed=arm64
#else
  #error "Unsupported architecture: {#Arch}"
#endif

ArchitecturesInstallIn64BitMode=x64compatible

; Require Windows 10 or newer (any build)
MinVersion=10.0

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl,.\\translations\\Messages_en_utf8.isl"

[Files]
; Copy jpackage app image placed in project root under jpackage/
Source: "jpackage\\Crypta.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "jpackage\\app\\*"; DestDir: "{app}\\app"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "jpackage\\runtime\\*"; DestDir: "{app}\\runtime"; Flags: ignoreversion recursesubdirs createallsubdirs

; Optional: top-level README/licenses shipped with installer if any
Source: "install_node\\README.txt"; DestDir: "{app}"; Flags: ignoreversion skipifsourcedoesntexist
Source: "install_node\\licenses\\*"; DestDir: "{app}\\licenses"; Flags: ignoreversion recursesubdirs createallsubdirs skipifsourcedoesntexist
Source: "resources\\CryptaInstaller_InnoSetup_Uninstall.ico"; DestDir: "{app}"; Flags: ignoreversion

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: checkedonce

[Icons]
Name: "{group}\\{#AppName}"; Filename: "{app}\\{#AppExeName}"
Name: "{group}\\{cm:UninstallProgram,{#AppName}}"; Filename: "{uninstallexe}"
Name: "{autodesktop}\\{#AppName}"; Filename: "{app}\\{#AppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\\{#AppExeName}"; Flags: nowait postinstall skipifsilent shellexec; Description: "{cm:LaunchProgram,{#StringChange(AppName, '&', '&&')}}"

[UninstallDelete]
; TODO: enumerate expected files instead of wildcard if possible
Type: filesandordirs; Name: "{app}\\*"

[Code]
